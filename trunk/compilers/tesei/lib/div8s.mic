;
; Знаковое деление 8/8
; ~~~~~~~~~~~~~~~~~~~~
; Вход:		%A0 - делимое
;		%A1 - делитель
; Выход:	%A0 - частное
;		%A2 - остаток
; Исп-ся:	%A3 - счётчик сдвигов
;		%A4 - знаковый регистр
;
div8s:
	mov	%a4, %a0	; Делимое - в знаковый регистр
	xor	%a4, %a1	; XOR знакового регистра с делителем
	btth	%a1, 1000b	; Делитель <0?
	jz	.+1		; Нет
	neg	%a1		; Смена знака делителя
	btth	%a0, 1000b	; Делимое <0?
	jz	.+1		; Нет
	neg	%a0		; Смена знака делимого
	clr	%a2		; Инициализация остатка
	movl	%a3, 9		; Число битов в байте + 1
$1:	rlc	%a0		; Циклич. сдвиг влево делимого и частного

	jc	$4f		; Если CF=1
	dec	%a3		; Пока не все
	jnz	$2f		;  сдвиги
	jmp	$5f		;
$4:	dec	%a3		; Пока не все
	sst	1		; CF=1
	jnz	$2f		;  сдвиги
$5:	btth	%a4, 1000b	; Знаковый регистр <0?
	jz	.+1		; Нет
	neg	%a0		; Смена знака знакового регистра
	rts			; Выход из подпрограммы
$2:	rlc	%a2		; Циклич. сдвиг влево остатка
	sub	%a2, %a1	; Вычитание из остатка делителя
	jnc	$3f		; Если разность >0
	add	%a2, %a1	; Иначе - восстанавливается остаток
	cst	1		; CF=0
	jmp	$1b		; Следующий цикл
$3:	sst	1		; CF=1
	jmp	$1b		; Следующий цикл
