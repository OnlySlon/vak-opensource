;
; Знаковое умножение 16x16
; ~~~~~~~~~~~~~~~~~~~~~~~~
; Вход:		%A0 - мл. байт 1-го множ-ля
;		%A1 - ст. байт 1-го множ-ля
;		%A2 - мл. байт 2-го множ-ля
;		%A3 - ст. байт 2-го множ-ля
; Выход:	%A2 - байт 0 рез-та
;		%A3 - байт 1 рез-та
;		%A4 - байт 2 рез-та
;		%A5 - байт 3 рез-та
; Исп-ся:	%A6 - счётчик сдвигов
;

; Пока оставляю эту п/программу, займусь лучше следующими

mul16s:
	clr	%a5		; Инициализация байта 3 результата
	xor	%a4, %a4	; Инициализация байта 2 результата и CF
	movl	%a6, 16		; Число битов в байте
$1:	JNC	$3f
$2:	add	%a4, %a0	; Сложение байта 2 результата с мл. байтом 1-го множ-ля
	adc	%a5		; Сложение байта 3 результата с CF
	jnc	$100f		; Если не установлен CF
	add	%a5, %a1	; Сложение байта 3 результата с ст. байтом 1-го множ-ля
	sst	1		; Восстановление
	jmp	$3f		;  CF
$100:	add	%a5, %a1	; Сложение байта 3 результата с ст. байтом 1-го множ-ля
$3:
	jsr	RBTTL
	jz	.+1		; Нет
	sub	%a4, %a0	; Восстановление байта 2 результата
	jsr	RBTTL
	jz	$4f		; Нет
	sbc	%a5		; Восстановление
	jnc	$200f		; Если не установлен CF
	sub	%a5, %a1	;  байта 3 результата
	sst	1		; Восстановление
	jmp	$4f		;  CF
$200:	sub	%a5, %a1	;  байта 3 результата
$4:
	shra	%a5		; Арифметич.сдвиг вправо байта 3 результата
	rrc	%a4		; Циклич. сдвиг вправо байта 2 результата
	rrc	%a3		; Циклич. сдвиг вправо байта 1 рез-та и мл.б. 2 множ-ля
	rrc	%a2		; Циклич. сдвиг вправо байта 0 рез-та и ст.б. 2 множ-ля
	JSR	RDEC		; {Это}
	jnz	$1b		; {всё}
	rts			; {временно}

;???
	jc	$5f		; Если CF=1
	dec	%a6		; Пока не все
	jnz	$3b		;  сдвиги
	rts			; Выход из подпрограммы
$5:	dec	%a6		; Пока не все
	sst	1		; CF=1
	jnz	$2b		;  сдвиги
	rts			; Выход из подпрограммы

;
; П/программки для сохранения бита C
;
RDEC:	jc	$1f
	dec	%a6
	rts
$1:	dec	%a6
	sst	1
	rts

RBTTL:	jc	$1f
	bttl	%a2, 0001b
	rts
$1:	bttl	%a2, 0001b
	sst	1
	rts

;RBTTH:	jc	$1f
;	btth	%a4, 1000b
;	rts
;$1:	btth	%a4, 1000b
;	sst	1
;	rts
;
;CBTTH1:
;	jc	.+2
;	btth	%a1, 1000b
;	rts
;	btth	%a1, 1000b
;	sst	1
;	rts
