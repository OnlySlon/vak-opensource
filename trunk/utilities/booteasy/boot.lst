     1                                  ; BOOTEASY, version 1.8, rewritten for NASM.
     2                                  ; Developed from BOOTANY, with many improvements.
     3                                  ; The main idea was to simplify the installation
     4                                  ; procedure and to remove unnecessary partition type switching.
     5                                  ; Second hard disk switching added.
     6                                  ; Author: Serge Vakulenko, <vak@cronyx.ru>
     7                                  
     8                                  ; TODO
     9                                  ; *) Check the BSD/OS partition code
    10                                  ; *) Add the OpenBSD partition code
    11                                  ; *) Add the Linux swap partition code
    12                                  
    13                                  F1_scancode     equ     59		; scancode of 'F1' key
    14                                  Enter_scancode	equ	28		; scancode of 'Enter' key
    15                                  Timeout		equ     5		; wait up to 5 seconds for reply
    16                                  
    17                                  StdBase		equ     7c00h		; address where DOS loads us
    18                                  Base		equ	600h		; address where we rewrite itself
    19                                  Partab		equ	1beh		; partition table offset
    20                                  NumDisks	equ	475h		; number of disk drives (BIOS data area)
    21                                  
    22                                  BootIndicator   equ	0		; partition record: boot indicator
    23                                  BeginHead       equ	1		; first partition sector: head number
    24                                  BeginSector     equ	2		; sector and cylinder
    25                                  SystemId        equ	4		; system type
    26                                  
    27                                  ; -------------------------------
    28                                  ;
    29                                  ;               Setup the stack and segment registers
    30                                  ;
    31                                  Boot:
    32 00000000 31C0                    		xor	AX,AX		; Zero register
    33 00000002 8EC0                    		mov	ES,AX		; ES := 0
    34 00000004 8ED8                    		mov	DS,AX		; DS := 0
    35 00000006 8ED0                    		mov     SS,AX           ; disables intrs up to the next command
    36 00000008 BC007C                  		mov	SP,StdBase	; SP at 7c00
    37                                  ;
    38                                  ;               DOS loads this pgm at 0000:7C00. Any boot routine
    39                                  ;               we call also expects to execute there so the first
    40                                  ;               exercise is to move this code somewhere else.
    41                                  ;
    42 0000000B FC                      		cld			; Clear direction
    43 0000000C 89E6                    		mov	SI,SP		; Copy from 7c00h...
    44 0000000E BF0006                  		mov	DI,Base		; ...to 600h...
    45 00000011 B90001                  		mov	CX,256		; ...512 bytes, or 256 words
    46 00000014 F2A5                    		repne	movsw		; Move itself to new location
    47                                  
    48 00000016 EA[6706]0000            		jmp	(0):Base+Entry
    49                                  
    50                                  ; -------------------------------
    51                                  ;
    52                                  ;               A valid function key was depressed (or defaulted)
    53                                  ;               Attempt to boot the corresponding partition.
    54                                  ;
    55                                  Load:
    56 0000001B 89EA                    		mov	DX,BP		; restore drive number
    57 0000001D 58                      		pop	AX		; key '1'..'5'
    58 0000001E A2[5307]                		mov     [Base+default],AL ; save function key number
    59 00000021 3C35                    		cmp	AL,'5'
    60 00000023 7423                    		je	SwitchDrive
    61 00000025 B410                    		mov	AH,16
    62 00000027 F6E4                    		mul	AH		; AX = key * 16
    63 00000029 05AE04                  		add	AX,Base+Partab-'1'*16 ; subtract '1'
    64 0000002C 89C6                    		mov	SI,AX
    65                                  ;
    66                                  ;               Check if the partition is empty.
    67                                  ;
    68 0000002E 807C0400                		cmp	byte [SystemId+SI],0
    69 00000032 7444                    		je      Menu		; Empty - display menu again
    70 00000034 807C0405                		cmp	byte [SystemId+SI],05h
    71 00000038 743E                    		je      Menu		; DOS extended type - never load
    72                                  
    73 0000003A C60480                  		mov     byte [BootIndicator+SI],80h ; Mark partition as bootable
    74 0000003D E8DE00                  		call	SaveBoot
    75                                  ;
    76                                  ;               Read in and validate the partition's boot sector.
    77                                  ;
    78 00000040 8A7401                  		mov     DH,[BeginHead+SI] ; head from partition table
    79 00000043 8B4C02                  		mov     CX,[BeginSector+SI]
    80 00000046 EB08                    		jmp	short loadboot
    81                                  ;
    82                                  ;               Read in the boot sector from second disk.
    83                                  ;
    84                                  SwitchDrive:
    85 00000048 E8D300                  		call	SaveBoot
    86 0000004B B90100                  		mov     CX,0001h	; cylinder 0, sector 1
    87 0000004E 30CA                    		xor	DL,CL		; (DL ^= 1) switch drive
    88                                  loadboot:
    89 00000050 BB007C                  		mov	BX,StdBase	; ES already == 0
    90 00000053 B80102                  		mov     AX,0201h	; function, # of sectors
    91 00000056 CD13                    		int     13h		; read system boot record
    92 00000058 721E                    		jc      Menu		; exit if error
    93 0000005A 81BFFE0155AA            		cmp     word [510+BX],0aa55h ; test signature
    94 00000060 7516                    		jne     Menu		; reprompt if invalid
    95                                  ;
    96                                  ;		Jump to secondary boot.
    97                                  ;		DL now contains boot disk number (80h or 81h);
    98                                  ;		ES:SI contains the address of partition table
    99                                  ;		entry to boot.
   100                                  ;
   101 00000062 EA007C0000              		jmp	(0):StdBase
   102                                  
   103                                  ; -------------------------------
   104                                  ;
   105                                  ;		The main entry to the boot
   106                                  ;
   107                                  Entry:
   108 00000067 80FA81                  		cmp	DL,81h		; DL contains current drive number
   109 0000006A 7402                    		je      driveok		; is it valid?
   110 0000006C B280                    		mov	DL,80h		; no - use the default value
   111 0000006E 89D5                    driveok:	mov	BP,DX		; save the drive number
   112 00000070 42                      		inc	DX		; 80h -> 81h, 81h -> 82h
   113 00000071 80F2B3                  		xor	DL,80h+'3'	; 80h -> '2', 81h -> '1'
   114 00000074 8816[4507]              		mov	[Base+diskNum],DL
   115                                  ;
   116                                  ;               Display the menu
   117                                  ;
   118                                  Menu:
   119 00000078 BFBE07                  		mov     DI,Base+Partab	; set index
   120 0000007B B90400                  		mov     CX,4		; set loop count
   121 0000007E C606[3807]31            		mov	byte [Base+key],'1' ; set key number in message
   122 00000083 30F6                    		xor	DH,DH		; count of partitions
   123                                  menuloop:
   124 00000085 882D                    		mov     [BootIndicator+DI],CH ; Clear active flag
   125 00000087 8A4504                  		mov	AL,[SystemId+DI]
   126 0000008A 3C00                    		cmp	AL,0		; unused partition?
   127 0000008C 7427                    		je	next
   128 0000008E 3C05                    		cmp	AL,5		; extended DOS partition?
   129 00000090 7423                    		je	next
   130 00000092 3C82                    		cmp	AL,82h		; linux swap partition?
   131 00000094 741F                    		je	next
   132 00000096 FEC6                    		inc	DH		; increment partition count
   133                                  
   134 00000098 BE[3507]                		mov     SI,Base+FkeyMsg	; get msg addr
   135 0000009B E87100                  		call    Output
   136                                  
   137 0000009E BE[5307]                		mov	SI,Base+nameTable-2
   138                                  nameloop:
   139 000000A1 46                      		inc	SI
   140 000000A2 46                      		inc	SI
   141 000000A3 8B1C                    		mov	BX,[SI]
   142 000000A5 08FF                    		or	BH,BH
   143 000000A7 7405                    		je	endnameloop
   144 000000A9 327D04                  		xor     BH,[SystemId+DI]
   145 000000AC 75F3                    		jne	nameloop
   146                                  endnameloop:
   147 000000AE 8DB7[7B07]              		lea	SI,[Base+namtab+BX]
   148 000000B2 E85A00                  		call	Output
   149                                  next:
   150 000000B5 83C710                  		add	DI,byte 16	; next entry address
   151 000000B8 FE06[3807]              		inc	byte [Base+key]
   152 000000BC E2C7                    		loop	menuloop
   153                                  
   154 000000BE 803E750402              		cmp	byte [NumDisks],2 ; is the second disk present?
   155 000000C3 740B                    		je	have2disks	; have disk 2
   156                                  
   157 000000C5 BE[4607]                		mov     SI,Base+defaultMsg ; prepare 'Default' message
   158 000000C8 08F6                    		or	DH,DH		; no disk 2; do we have valid partitions?
   159 000000CA 750A                    		jne	prompt		; several partitions, wait for reply
   160                                  
   161 000000CC CD18                    		int	18h		; no partitions, load ROM basic
   162 000000CE EBA8                    		jmp	short Menu	; repeat, if no ROM basic
   163                                  have2disks:
   164 000000D0 BE[3507]                		mov     SI,Base+FkeyMsg	; print 'F5'
   165 000000D3 E83900                  		call    Output		; now SI points to "disk 2\nDefault..."
   166                                  prompt:
   167 000000D6 E83600                  		call    Output		; print 'Default' message
   168                                  reprompt:
   169 000000D9 30E4                    		xor     AH,AH		; GetTickCount
   170 000000DB CD1A                    		int     1ah		; BiosTimerService
   171 000000DD 89D3                    		mov     BX,DX           ; lo-order tick count
   172 000000DF 83C360                  		add     BX,byte 192*Timeout/10 ; timeout value in ticks
   173                                  ;
   174                                  ;               Get the reply
   175                                  ;
   176                                  waitkey:
   177 000000E2 B401                    		mov     AH,1		; keyboard status
   178 000000E4 CD16                    		int     16h		; keybd bios service
   179 000000E6 B400                    		mov     AH,0            ; GetTickCount
   180 000000E8 750B                    		jnz     reply		; jump if reply
   181 000000EA CD1A                    		int     1ah		; BiosTimerService
   182 000000EC 39DA                    		cmp     DX,BX           ; check for timeout
   183 000000EE 72F2                    		jb      waitkey		; wait for scancode
   184                                  loaddefault:
   185 000000F0 A0[5307]                		mov     AL,[Base+default] ; prior system id
   186 000000F3 EB0A                    		jmp     short testkey	; boot default system
   187                                  reply:
   188 000000F5 CD16                    		int     16h             ; AH=0, keybd bios service
   189 000000F7 88E0                    		mov     AL,AH		; Copy to AL
   190 000000F9 3C1C                    		cmp	AL,Enter_scancode
   191 000000FB 74F3                    		je	loaddefault
   192 000000FD 04F6                    		add     AL,'1'-F1_scancode ; Turn into index
   193                                  testkey:
   194 000000FF 3C31                    		cmp     AL,'1'		; max Function key
   195 00000101 72D6                    		jb	reprompt	; Invalid code check
   196 00000103 3C35                    		cmp     AL,'5'		; max Function key
   197 00000105 77D2                    		jnbe    reprompt	; if not F1..F5, branch
   198 00000107 50                      		push	AX
   199                                  
   200 00000108 BE[3307]                		mov	SI,Base+newLine	; new line
   201 0000010B BB[1B06]                		mov	BX,Base+Load
   202 0000010E 53                      		push	BX		; call Output; jmp Load
   203                                  
   204                                  ; -------------------------------
   205                                  ;
   206                                  ;		Output line [SI] to screen, end of line marked with 80h
   207                                  ;
   208                                  Output:
   209 0000010F FC                      		cld			; reset direction flag
   210 00000110 AC                      		lodsb			; load argument from string
   211 00000111 50                      		push	AX		; save byte
   212 00000112 247F                    		and     AL,7fh		; insure valid character
   213 00000114 B40E                    		mov     AH,14		; write tty
   214 00000116 CD10                    		int     10h		; bios video service
   215 00000118 58                      		pop	AX		; restore byte
   216 00000119 A880                    		test    AL,80h		; test for end of string
   217 0000011B 74F2                    		jz      Output		; do until end of string
   218 0000011D C3                      		ret			; return to caller
   219                                  
   220                                  ; -------------------------------
   221                                  ;
   222                                  ;		Save boot block default partition settings
   223                                  ;
   224                                  SaveBoot:
   225 0000011E 56                      		push	SI
   226 0000011F B80103                  		mov     AX,0301h	; write sector
   227 00000122 BB0006                  		mov	BX,Base		; ES already == 0
   228 00000125 B90100                  		mov     CX,0001h	; cylinder 0, sector 1
   229 00000128 30F6                    		xor     DH,DH		; drive #, head 0
   230 0000012A CD13                    		int     13h		; replace boot record
   231 0000012C 5E                      		pop	SI
   232 0000012D C606[5307]3F            		mov	byte [Base+default],'?' ; reset default
   233 00000132 C3                      		ret
   234                                  
   235                                  ; -------------------------------
   236                                  
   237 00000133 0D8A                    newLine		db	13,10+80h
   238 00000135 0D0A46                  FkeyMsg         db      13,10,'F'
   239 00000138 30202E202E202EA064-     key             db      '0 . . .',' '+80h,'disk '
   240 00000141 69736B20           
   241 00000145 31                      diskNum		db	'1'
   242 00000146 0D0A0A44656661756C-     defaultMsg	db	13,10,10,'Default: F'
   243 0000014F 743A2046           
   244 00000153 3FA0                    default         db      '?',' '+80h
   245                                  
   246 00000155 0001                    nameTable	db      dos     -namtab,   1	; fat12
   247 00000157 0004                    		db      dos     -namtab,   4	; fat16 < 32Mb
   248 00000159 0006                    		db      dos     -namtab,   6	; fat16 > 32Mb
   249 0000015B 0A07                    		db      hpfs    -namtab,   7
   250 0000015D 0E0A                    		db      os2     -namtab,  0Ah
   251 0000015F 030B                    		db      win     -namtab,  0Bh	; fat32
   252 00000161 030C                    		db      win     -namtab,  0Ch	; fat32 lba
   253 00000163 030E                    		db      win     -namtab,  0Eh	; fat16 lba
   254 00000165 1163                    		db      unix    -namtab,  63h
   255 00000167 1564                    		db      novell  -namtab,  64h
   256 00000169 1565                    		db      novell  -namtab,  65h
   257 0000016B 1B80                    		db      minix   -namtab,  80h
   258 0000016D 2081                    		db      linux   -namtab,  81h	; minix
   259 0000016F 2083                    		db      linux   -namtab,  83h	; ext2fs
   260 00000171 2085                    		db      linux   -namtab,  85h	; extended
   261 00000173 2593                    		db      amoeba  -namtab,  93h
   262 00000175 329F                    		db      bsdi    -namtab,  9fh
   263 00000177 2BA5                    		db      freebsd -namtab, 0A5h
   264 00000179 3800                    		db      noname  -namtab,   0
   265                                  
   266                                  namtab:
   267 0000017B 446FF3                  dos             db      'Do','s'+80h
   268 0000017E 57696E646F77F3          win             db      'Window','s'+80h
   269 00000185 487066F3                hpfs            db      'Hpf','s'+80h
   270 00000189 4F73B2                  os2             db      'Os','2'+80h
   271 0000018C 556E69F8                unix            db      'Uni','x'+80h
   272 00000190 4E6F76656CEC            novell          db      'Novel','l'+80h
   273 00000196 4D696E69F8              minix           db      'Mini','x'+80h
   274 0000019B 4C696E75F8              linux           db      'Linu','x'+80h
   275 000001A0 416D6F6562E1            amoeba          db      'Amoeb','a'+80h
   276 000001A6 467265654253C4          freebsd         db      'FreeBS','D'+80h
   277 000001AD 4253442F4FD3            bsdi            db      'BSD/O','S'+80h
   278 000001B3 3FBF                    noname		db	'?','?'+80h
   279                                  
   280                                  used            equ     ($ - $$)
   281 000001B5 00<rept>                		times   (1beh - used) db 0	; error if code too big
   282 000001BE 00<rept>                		times	64 db 0			; clear rest of record
   283 000001FE 55AA                    		dw	0aa55h			; magic
   284                                  ; -------------------------------
