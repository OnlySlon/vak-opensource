Ω#!/usr/bin/php
<?
/* Set internal character encoding to UTF-8 */
mb_internal_encoding ("UTF-8");

include "phrases.php";

$–≤–≤–æ–¥ = fopen ('php://stdin', 'r');

print "–ö–∏—Å–∞ –æ—Ñ–ª–∞–π–Ω.\n";
print "–ü—Ä–∏–≤–µ—Ç! –ü–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è?\n";
for (;;) {
	print '>> ';
	$–∑–∞–ø—Ä–æ—Å = fgets ($–≤–≤–æ–¥);
	if (! $–∑–∞–ø—Ä–æ—Å) {
		print "\n";
		break;
	}
	$–∑–∞–ø—Ä–æ—Å = trim ($–∑–∞–ø—Ä–æ—Å);
	$–¥–ª–∏–Ω–∞_–∑–∞–ø—Ä–æ—Å–∞ = mb_strlen ($–∑–∞–ø—Ä–æ—Å);
print ("–î–ª–∏–Ω–∞ = $–¥–ª–∏–Ω–∞_–∑–∞–ø—Ä–æ—Å–∞\n");
/*
	$–≤–æ–ø—Ä–æ—Å = 0;
	if ($–¥–ª–∏–Ω–∞_–∑–∞–ø—Ä–æ—Å–∞ < 2) {
		$–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ = 1;
		qz[1] := qz[1] + 1;
	} else if ($–∑–∞–ø—Ä–æ—Å == $–ø—Ä–µ–¥—ã–¥—É—â–∏–π_–∑–∞–ø—Ä–æ—Å)
		$–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ = 2;
	} else {
		while (o) and (a) do begin
			z := input[k];
			if z = '?' then
				$–≤–æ–ø—Ä–æ—Å = 1;
			k := k+1;
			if z = input[k] then
				n := n+1;
			if n > 4 then
				o := false;
			if k = input_length then
				a := false
		end;
	}
	lastmess := input;
	if not(o) then begin
		qz[1] := qz[1] + 1;
		$–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ := 1
	end
*/

# 	parse;
	$–≤—ã–≤–æ–¥ = "–í–∏–∂—É: <$–∑–∞–ø—Ä–æ—Å>";
	print ($–≤—ã–≤–æ–¥ . "\n");
}
?>
